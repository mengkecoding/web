import{_ as e,c as s,o as i,ae as l}from"./chunks/framework.BTjre2ya.js";const r="/web/Practice/HelloWorld/1.1.png",o="/web/Practice/HelloWorld/2.1.png",t="/web/Practice/HelloWorld/2.2.png",n="/web/Practice/HelloWorld/2.3.png",p="/web/Practice/HelloWorld/3.1.png",h="/web/Practice/HelloWorld/3.2.png",c="/web/Practice/HelloWorld/3.3.png",d="/web/Practice/HelloWorld/3.4.png",g="/web/Practice/HelloWorld/4.1.png",k="/web/Practice/HelloWorld/4.2.png",_="/web/Practice/HelloWorld/5.1.png",m="/web/Practice/HelloWorld/5.2.png",b="/web/Practice/HelloWorld/6.1.png",u="/web/Practice/HelloWorld/6.2.png",P="/web/Practice/HelloWorld/6.3.png",q="/web/Practice/HelloWorld/6.4.png",x="/web/Practice/HelloWorld/6.5.png",F="/web/Practice/HelloWorld/6.6.png",w="/web/Practice/HelloWorld/6.7.1.png",y="/web/Practice/HelloWorld/6.7.2.png",E="/web/Practice/HelloWorld/6.7.3.png",H="/web/Practice/HelloWorld/6.8.png",N=JSON.parse('{"title":"手把手教你部署HelloWorld到云服务器","description":"","frontmatter":{},"headers":[],"relativePath":"Practice/HelloWorld.md","filePath":"Practice/HelloWorld.md"}'),f={name:"Practice/HelloWorld.md"};function W(C,a,v,B,I,S){return i(),s("div",null,a[0]||(a[0]=[l('<h1 id="手把手教你部署helloworld到云服务器" tabindex="-1">手把手教你部署HelloWorld到云服务器 <a class="header-anchor" href="#手把手教你部署helloworld到云服务器" aria-label="Permalink to &quot;手把手教你部署HelloWorld到云服务器&quot;">​</a></h1><h2 id="_1-购买一台云服务器" tabindex="-1">1. 购买一台云服务器 <a class="header-anchor" href="#_1-购买一台云服务器" aria-label="Permalink to &quot;1. 购买一台云服务器&quot;">​</a></h2><p><img src="'+r+'" alt="Image"> 首先需要购买一台装有linux系统的云服务器，阿里云、火山引擎、腾讯云、华为云、京东云首次购买轻量的云服务都在40-60元/年（2核2G），我购买的是华为的云服务器，需要设置服务器的账号密码，安装系统镜像大概需要2-5分钟的时间，记住自己的公网ip地址。</p><h2 id="_2-应用上传服务器前的准备" tabindex="-1">2. 应用上传服务器前的准备 <a class="header-anchor" href="#_2-应用上传服务器前的准备" aria-label="Permalink to &quot;2. 应用上传服务器前的准备&quot;">​</a></h2><h3 id="_2-1-更新软件包列表信息" tabindex="-1">2.1 更新软件包列表信息 <a class="header-anchor" href="#_2-1-更新软件包列表信息" aria-label="Permalink to &quot;2.1 更新软件包列表信息&quot;">​</a></h3><p>在终端输入指令：<code>sudo apt update</code></p><p><img src="'+o+'" alt="Image"></p><h3 id="_2-2-安装jdk17" tabindex="-1">2.2 安装JDK17 <a class="header-anchor" href="#_2-2-安装jdk17" aria-label="Permalink to &quot;2.2 安装JDK17&quot;">​</a></h3><p>在终端输入指令：<code>sudo apt install openjdk-17-jdk</code></p><p><img src="'+t+'" alt="Image"></p><h3 id="_2-3-创建部署目录" tabindex="-1">2.3 创建部署目录 <a class="header-anchor" href="#_2-3-创建部署目录" aria-label="Permalink to &quot;2.3 创建部署目录&quot;">​</a></h3><p>在终端输入指令：<code>mkdir ~/spring-apps</code></p><p><img src="'+n+'" alt="Image"></p><h2 id="_3-创建一个helloworld项目" tabindex="-1">3.创建一个HelloWorld项目 <a class="header-anchor" href="#_3-创建一个helloworld项目" aria-label="Permalink to &quot;3.创建一个HelloWorld项目&quot;">​</a></h2><h3 id="_3-1-点击new-project" tabindex="-1">3.1 点击New Project <a class="header-anchor" href="#_3-1-点击new-project" aria-label="Permalink to &quot;3.1 点击New Project&quot;">​</a></h3><p><img src="'+p+'" alt="Image"></p><h3 id="_3-2-点击spring-boot-按图示进行配置" tabindex="-1">3.2 点击Spring Boot，按图示进行配置 <a class="header-anchor" href="#_3-2-点击spring-boot-按图示进行配置" aria-label="Permalink to &quot;3.2 点击Spring Boot，按图示进行配置&quot;">​</a></h3><p><img src="'+h+'" alt="Image"></p><h3 id="_3-3-勾选spring-web-创建项目" tabindex="-1">3.3 勾选Spring Web，创建项目 <a class="header-anchor" href="#_3-3-勾选spring-web-创建项目" aria-label="Permalink to &quot;3.3 勾选Spring Web，创建项目&quot;">​</a></h3><p><img src="'+c+'" alt="Image"></p><h3 id="_3-4-创建hellocontroller类" tabindex="-1">3.4 创建HelloController类 <a class="header-anchor" href="#_3-4-创建hellocontroller类" aria-label="Permalink to &quot;3.4 创建HelloController类&quot;">​</a></h3><p><img src="'+d+'" alt="Image"></p><h3 id="_3-5-运行项目" tabindex="-1">3.5 运行项目 <a class="header-anchor" href="#_3-5-运行项目" aria-label="Permalink to &quot;3.5 运行项目&quot;">​</a></h3><p>在本地浏览器中输入：<code>localhost:8080</code>，测试效果</p><h2 id="_4-上传应用到服务器" tabindex="-1">4.上传应用到服务器 <a class="header-anchor" href="#_4-上传应用到服务器" aria-label="Permalink to &quot;4.上传应用到服务器&quot;">​</a></h2><h3 id="_4-1-打包应用" tabindex="-1">4.1 打包应用 <a class="header-anchor" href="#_4-1-打包应用" aria-label="Permalink to &quot;4.1 打包应用&quot;">​</a></h3><p>打开Spring终端输入指令：<code>mvn clean package</code></p><p><img src="'+g+'" alt="Image"></p><h3 id="_4-2-使用scp命令将jar文件上传到服务器" tabindex="-1">4.2 使用scp命令将JAR文件上传到服务器 <a class="header-anchor" href="#_4-2-使用scp命令将jar文件上传到服务器" aria-label="Permalink to &quot;4.2 使用scp命令将JAR文件上传到服务器&quot;">​</a></h3><p>在Spring终端中输入指令：<code>scp target/hello-spring-0.0.1-SNAPSHOT.jar username@your-server-ip:~/spring-apps/</code> （按照下图修改指令）</p><p><img src="'+k+'" alt="Image"></p><h2 id="_5-运行helloworld应用" tabindex="-1">5. 运行HelloWorld应用 <a class="header-anchor" href="#_5-运行helloworld应用" aria-label="Permalink to &quot;5. 运行HelloWorld应用&quot;">​</a></h2><p>打开项目文件目录：<code>cd ~/spring-apps</code>,运行项目：<code>java -jar hello-0.0.1-SNAPSHOT.jar</code></p><p><img src="'+_+'" alt="Image"> 访问应用，在浏览器中输入：<code>your-ip:8080</code>（如：1.95.211.85：8080）</p><p><img src="'+m+'" alt="Image"></p><h2 id="_6-通过域名访问helloworld应用" tabindex="-1">6. 通过域名访问HelloWorld应用 <a class="header-anchor" href="#_6-通过域名访问helloworld应用" aria-label="Permalink to &quot;6. 通过域名访问HelloWorld应用&quot;">​</a></h2><p>在云服务商购买域名，在本文中使用的域名是在火山引擎中购买的。（注：购买域名后，使用域名需要进行备案）</p><h3 id="_6-1-购买域名后-点击控制台搜索域名服务。" tabindex="-1">6.1 购买域名后，点击控制台搜索域名服务。 <a class="header-anchor" href="#_6-1-购买域名后-点击控制台搜索域名服务。" aria-label="Permalink to &quot;6.1 购买域名后，点击控制台搜索域名服务。&quot;">​</a></h3><p><img src="'+b+'" alt="Image"></p><h3 id="_6-2-选择解析域名" tabindex="-1">6.2 选择解析域名 <a class="header-anchor" href="#_6-2-选择解析域名" aria-label="Permalink to &quot;6.2 选择解析域名&quot;">​</a></h3><p><img src="'+u+'" alt="Image"></p><h3 id="_6-3-点击添加记录" tabindex="-1">6.3 点击添加记录 <a class="header-anchor" href="#_6-3-点击添加记录" aria-label="Permalink to &quot;6.3 点击添加记录&quot;">​</a></h3><p><img src="'+P+'" alt="Image"></p><h3 id="_6-4-按照下图进行配置-完成后点击提交" tabindex="-1">6.4 按照下图进行配置，完成后点击提交 <a class="header-anchor" href="#_6-4-按照下图进行配置-完成后点击提交" aria-label="Permalink to &quot;6.4 按照下图进行配置，完成后点击提交&quot;">​</a></h3><p><img src="'+q+'" alt="Image"></p><h3 id="_6-5-勾选记录-点击启用" tabindex="-1">6.5 勾选记录，点击启用 <a class="header-anchor" href="#_6-5-勾选记录-点击启用" aria-label="Permalink to &quot;6.5 勾选记录，点击启用&quot;">​</a></h3><p><img src="'+x+'" alt="Image"></p><p>等待五分钟后，可以通过域名+端口号的方式访问应用。（如：www.mengkecoding.cn:8080） 为了将域名绑定到云服务器的ip和端口号，需要在服务端进一步配置，使用Nginx反向代理服务器将80端口的请求转发到8080端口。</p><h3 id="_6-6-安装nginx" tabindex="-1">6.6 安装Nginx <a class="header-anchor" href="#_6-6-安装nginx" aria-label="Permalink to &quot;6.6 安装Nginx&quot;">​</a></h3><p>在服务器终端输入命令：sudo apt install nginx</p><p><img src="'+F+'" alt="Image"></p><h3 id="_6-7-配置nginx反向代理" tabindex="-1">6.7 配置Nginx反向代理 <a class="header-anchor" href="#_6-7-配置nginx反向代理" aria-label="Permalink to &quot;6.7 配置Nginx反向代理&quot;">​</a></h3><h4 id="_6-7-1-在终端输入命令" tabindex="-1">6.7.1 在终端输入命令 <a class="header-anchor" href="#_6-7-1-在终端输入命令" aria-label="Permalink to &quot;6.7.1 在终端输入命令&quot;">​</a></h4><div class="language-Shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nginx/sites-available/yourdomain.conf</span></span></code></pre></div><p><img src="'+w+`" alt="Image"></p><h4 id="_6-7-2-添加以下内容-根据图片进行修改" tabindex="-1">6.7.2 添加以下内容（根据图片进行修改） <a class="header-anchor" href="#_6-7-2-添加以下内容-根据图片进行修改" aria-label="Permalink to &quot;6.7.2 添加以下内容（根据图片进行修改）&quot;">​</a></h4><div class="language-Shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mengkecoding.cn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> www.mengkecoding.cn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://1.92.211.80:8080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $host;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Real-IP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Forwarded-For</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="`+y+`" alt="Image"></p><h4 id="_6-7-3-启用配置" tabindex="-1">6.7.3 启用配置： <a class="header-anchor" href="#_6-7-3-启用配置" aria-label="Permalink to &quot;6.7.3 启用配置：&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo ln -s /etc/nginx/sites-available/yourdomain.conf /etc/nginx/sites-enabled/ </span></span>
<span class="line"><span>sudo nginx -t # 检查配置语法 </span></span>
<span class="line"><span>sudo systemctl restart nginx</span></span></code></pre></div><p><img src="`+E+'" alt="Image"></p><h3 id="_6-8-测试效果" tabindex="-1">6.8 测试效果 <a class="header-anchor" href="#_6-8-测试效果" aria-label="Permalink to &quot;6.8 测试效果&quot;">​</a></h3><p>打开项目文件目录：<code>cd ~/spring-apps</code>,运行项目：<code>java -jar hello-0.0.1-SNAPSHOT.jar</code>,在浏览器中输入域名返回helloworld。</p><p><img src="'+H+'" alt="Image"></p>',64)]))}const T=e(f,[["render",W]]);export{N as __pageData,T as default};
