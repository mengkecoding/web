import{_ as s,c as n,o as e,ae as t}from"./chunks/framework.BjlC_BXf.js";const p="/Practice/Intranet-Penetration/1.png",o="/Practice/Intranet-Penetration/2.png",r="/Practice/Intranet-Penetration/3.png",l="/Practice/Intranet-Penetration/4.png",i="/Practice/Intranet-Penetration/5.png",c="/Practice/Intranet-Penetration/6.png",d="/Practice/Intranet-Penetration/7.png",h="/Practice/Intranet-Penetration/8.png",u="/Practice/Intranet-Penetration/9.png",q=JSON.parse('{"title":"低成本搭建公网可访问的本地应用","description":"","frontmatter":{},"headers":[],"relativePath":"Practice/低成本搭建公网可访问的本地应用.md","filePath":"Practice/低成本搭建公网可访问的本地应用.md"}'),g={name:"Practice/低成本搭建公网可访问的本地应用.md"};function _(b,a,m,f,v,P){return e(),n("div",null,a[0]||(a[0]=[t('<h1 id="低成本搭建公网可访问的本地应用" tabindex="-1">低成本搭建公网可访问的本地应用 <a class="header-anchor" href="#低成本搭建公网可访问的本地应用" aria-label="Permalink to &quot;低成本搭建公网可访问的本地应用&quot;">​</a></h1><h2 id="_1-内网穿透的核心流程" tabindex="-1">1. 内网穿透的核心流程 <a class="header-anchor" href="#_1-内网穿透的核心流程" aria-label="Permalink to &quot;1. 内网穿透的核心流程&quot;">​</a></h2><p>家庭或办公室的内网设备因无公网 IP 而无法直连。此时，可通过内网穿透软件（如 FRP），在<strong>具有公网 IP 的云服务器（代理节点）</strong> 和<strong>本地内网服务器（实际服务端）</strong> 之间建立<strong>持久隧道</strong>。工作原理为：</p><ol><li>公网请求抵达云服务器。</li><li>云服务器作为<strong>中继</strong>，通过隧道将请求<strong>转发</strong>至内网服务器。</li><li>内网服务器处理请求。</li><li>生成的响应经<strong>隧道</strong>回传至云服务器。</li><li>云服务器将响应发还给请求方。</li></ol><p>云服务器实质充当了<strong>请求与响应的双向代理</strong>，使得公网用户得以间接访问内网服务。</p><h2 id="_2-环境准备" tabindex="-1">2. 环境准备 <a class="header-anchor" href="#_2-环境准备" aria-label="Permalink to &quot;2. 环境准备&quot;">​</a></h2><ul><li>一台拥有公网IP的云服务器</li><li>一台本地服务器</li><li>frp内网穿透软件<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noreferrer">压缩包</a></li></ul><h2 id="_3-在云服务器上部署frp服务端" tabindex="-1">3. 在云服务器上部署frp服务端 <a class="header-anchor" href="#_3-在云服务器上部署frp服务端" aria-label="Permalink to &quot;3. 在云服务器上部署frp服务端&quot;">​</a></h2><p>可通过两种方式获取软件压缩包：一是下载至本地后上传至云服务器，二是直接在云服务器下载。但由于 GitHub 在国内访问存在稳定性问题，云服务器直接下载易出现网络异常。因此建议在本地借助加速器完成压缩包下载，再上传至云服务器进行部署，以此确保下载过程的稳定性与效率。</p><h3 id="_3-1-下载linux版本的压缩包" tabindex="-1">3.1 下载Linux版本的压缩包 <a class="header-anchor" href="#_3-1-下载linux版本的压缩包" aria-label="Permalink to &quot;3.1 下载Linux版本的压缩包&quot;">​</a></h3><p><img src="'+p+'" alt=""></p><h3 id="_3-2-上传压缩包到云服务器-建议使用root用户操作" tabindex="-1">3.2 上传压缩包到云服务器（建议使用root用户操作） <a class="header-anchor" href="#_3-2-上传压缩包到云服务器-建议使用root用户操作" aria-label="Permalink to &quot;3.2 上传压缩包到云服务器（建议使用root用户操作）&quot;">​</a></h3><p>在云服务器创建临时目录，用于存放压缩包。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mkdir ~/temp</span></span></code></pre></div><p>将下载的压缩包上传至云服务器的临时目录，在本地服务器（Windows系统）打开cmd窗口，使用scp命令上传文件到云服务器。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scp -r C:\\Users\\20205\\Downloads\\frp_0.62.1_linux_amd64.tar.gz root@31.20.50.21:~/temp</span></span></code></pre></div><p>scp命令解读：scp -r <strong>你的本地文件目录</strong> root@<strong>你的公网IP</strong>:<strong>创建的临时文件夹</strong></p><h3 id="_3-3-运行frp服务端" tabindex="-1">3.3 运行frp服务端 <a class="header-anchor" href="#_3-3-运行frp服务端" aria-label="Permalink to &quot;3.3 运行frp服务端&quot;">​</a></h3><p>将压缩包移动到/usr/local目录下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mv ~/temp/* /usr/local</span></span></code></pre></div><p>解压文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>tar -zxvf /usr/local/frp_0.62.1_linux_amd64.tar.gz</span></span></code></pre></div><p><img src="'+o+`" alt=""></p><p><strong>注意文件名，若下载的压缩包不为frp_0.62.1_linux_amd64.tar.gz，需根据实际情况修改文件名。</strong></p><p>打开解压目录使用ls命令查看当前文件夹下的所有文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /usr/local/frp_0.62.1_linux_amd64</span></span>
<span class="line"><span>ls</span></span></code></pre></div><p><img src="`+r+`" alt=""></p><p>修改frps.toml配置文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cat &gt; frps.toml &lt;&lt;EOF</span></span>
<span class="line"><span>bindPort = 7000 #与本地frp客户端配置文件中的server_port保持一致</span></span>
<span class="line"><span>auth.token = &quot;your_secure_token_here&quot; #frp服务端与客户端的token保持一致，可自定义</span></span>
<span class="line"><span></span></span>
<span class="line"><span>webServer.addr = &quot;0.0.0.0&quot;</span></span>
<span class="line"><span>webServer.port = 7500 </span></span>
<span class="line"><span>webServer.user = &quot;admin&quot;</span></span>
<span class="line"><span>webServer.password = &quot;123456&quot;</span></span>
<span class="line"><span>EOF</span></span></code></pre></div><p>启动服务：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./frps -c frps.toml</span></span></code></pre></div><p><img src="`+l+'" alt=""></p><h2 id="_4-在本地环境中部署frp客户端" tabindex="-1">4. 在本地环境中部署frp客户端 <a class="header-anchor" href="#_4-在本地环境中部署frp客户端" aria-label="Permalink to &quot;4. 在本地环境中部署frp客户端&quot;">​</a></h2><h3 id="_4-1-下载windows版本的压缩包" tabindex="-1">4.1 下载Windows版本的压缩包 <a class="header-anchor" href="#_4-1-下载windows版本的压缩包" aria-label="Permalink to &quot;4.1 下载Windows版本的压缩包&quot;">​</a></h3><p><img src="'+i+'" alt=""></p><h3 id="_4-2-解压文件" tabindex="-1">4.2 解压文件 <a class="header-anchor" href="#_4-2-解压文件" aria-label="Permalink to &quot;4.2 解压文件&quot;">​</a></h3><p><img src="'+c+`" alt=""></p><h3 id="_4-3-运行frp客户端" tabindex="-1">4.3 运行frp客户端 <a class="header-anchor" href="#_4-3-运行frp客户端" aria-label="Permalink to &quot;4.3 运行frp客户端&quot;">​</a></h3><p>配置frpc.toml文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>serverAddr = &quot;84.74.13.32&quot;  # 替换为云服务器公网IP</span></span>
<span class="line"><span>serverPort = 7000</span></span>
<span class="line"><span>auth.token = &quot;your_secure_token_here&quot;  # 与服务端一致</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[[proxies]]</span></span>
<span class="line"><span>name = &quot;web-blog&quot;</span></span>
<span class="line"><span>type = &quot;tcp&quot;</span></span>
<span class="line"><span>localIP = &quot;localhost&quot;</span></span>
<span class="line"><span>localPort = 8080    # 本地博客端口</span></span>
<span class="line"><span>remotePort = 6001      # 云服务器转发端口</span></span></code></pre></div><p>在解压文件夹下新建start.bat文件，添加以下内容保存：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@echo off</span></span>
<span class="line"><span>frpc.exe -c frpc.toml</span></span>
<span class="line"><span>pause</span></span></code></pre></div><p><img src="`+d+'" alt=""></p><p>双击start.bat文件，运行frp客户端</p><p><img src="'+h+'" alt=""></p><h2 id="_5-通过公网访问本地helloworld应用" tabindex="-1">5. 通过公网访问本地HelloWorld应用 <a class="header-anchor" href="#_5-通过公网访问本地helloworld应用" aria-label="Permalink to &quot;5. 通过公网访问本地HelloWorld应用&quot;">​</a></h2><h3 id="_5-1-在springboot项目中运行helloworld应用-工作在8080端口" tabindex="-1">5.1 在SpringBoot项目中运行HelloWorld应用（工作在8080端口） <a class="header-anchor" href="#_5-1-在springboot项目中运行helloworld应用-工作在8080端口" aria-label="Permalink to &quot;5.1 在SpringBoot项目中运行HelloWorld应用（工作在8080端口）&quot;">​</a></h3><h3 id="_5-2-访问helloworld应用" tabindex="-1">5.2 访问HelloWorld应用 <a class="header-anchor" href="#_5-2-访问helloworld应用" aria-label="Permalink to &quot;5.2 访问HelloWorld应用&quot;">​</a></h3><p>打开浏览器，输入云服务器的公网IP+remotePort配置的端口6001(例：88.88.88.88:6001)，即可访问HelloWorld应用。</p><p><img src="'+u+'" alt=""></p>',50)]))}const x=s(g,[["render",_]]);export{q as __pageData,x as default};
